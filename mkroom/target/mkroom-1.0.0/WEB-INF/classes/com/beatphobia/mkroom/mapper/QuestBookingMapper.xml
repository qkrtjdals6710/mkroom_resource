<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.beatphobia.mkroom.mapper.QuestBookingMapper">

	<!-- 퀘스트 정보 조회 - file 매퍼 쪽에 통합함 --><!-- 
	<select id="selectQuestInfo" resultType="com.beatphobia.mkroom.domain.quest.QuestDTO">
		<![CDATA[
			SELECT QUESTNAME, BRANCHLOCATION, GENRE, DIFFICULTY, QUESTTIME, MINPLAYERNUM, MAXPLAYERNUM, DETAILCOMMENT, DELFLAG
			FROM (SELECT /*+ index_desc(PK_QUEST) */ rownum rn, QUESTNAME, BRANCHLOCATION, GENRE, DIFFICULTY, QUESTTIME, MINPLAYERNUM, MAXPLAYERNUM, DETAILCOMMENT, DELFLAG
			      FROM mkroom.quest
			      WHERE (
		]]>
		<if test="locationScope !=''">BRANCHLOCATION = #{locationScope} AND</if>
		<if test="diffScope !=''">DIFFICULTY = #{diffScope} AND</if>
		<if test="questTimeScope !=''">QUESTTIME = #{questTimeScope} AND</if>
		
		<![CDATA[
		 				 (rownum <= (#{pageNum} * #{rowAmountPerPage}))
		 				)
			     )
			WHERE rn >= ((#{pageNum}-1) * #{rowAmountPerPage}) +1
		]]>
	</select> -->
	
	<!-- DB에 저장된 총 행수 얻어오기(추가로 생각해볼 것. 임의로 번호를 부여하고 MAX로 값을 얻으면 매우 빨라짐) -->
	<select id="selectRowAmountTotal" resultType="long">
		SELECT count(*) totalCnt FROM mkroom.quest
	</select>
	
	<!-- DB에 저장된 location을 중복 제거해서 가져오기(갯수말고 무엇이 존재하는지 확인) -->
	<select id="selectBranchLocationList" resultType="com.beatphobia.mkroom.domain.quest.QuestDTO">
		SELECT DISTINCT BRANCHLOCATION
		FROM mkroom.quest
	</select>
	
	<!-- DB에 저장된 difficulty를 중복 제거해서 가져오기(갯수말고 무엇이 존재하는지 확인): 느려짐의 원인이 될 수 있다. 그냥 1 ~ 5 직접 적을까 -->
	<select id="selectDifficultyList" resultType="com.beatphobia.mkroom.domain.quest.QuestDTO">
		SELECT DISTINCT difficulty
		FROM mkroom.quest
		ORDER BY DIFFICULTY ASC
	</select>
	
	<!-- DB에 저장된 questTime을 중복 제거해서 가져오기(갯수말고 무엇이 존재하는지 확인) -->
	<select id="selectQuestTimeList" resultType="com.beatphobia.mkroom.domain.quest.QuestDTO">
		SELECT DISTINCT QUESTTIME
		FROM mkroom.quest
		ORDER BY QUESTTIME DESC
	</select>
	
	<!-- 퀘스트 상세 조회 -->
	<select id="selectQuestInfoDetail" resultType="com.beatphobia.mkroom.domain.quest.QuestDTO">
		SELECT QUESTNAME, BRANCHLOCATION, GENRE, DIFFICULTY, QUESTTIME, MINPLAYERNUM, MAXPLAYERNUM, DETAILCOMMENT, DELFLAG
		FROM mkroom.quest
		WHERE (QUESTNAME = #{questName} AND BRANCHLOCATION = #{branchLocation})
	</select>
	
	<!-- DB에 테마 정보를 저장하기  -->
	<insert id="insertQuestInfo">
		INSERT INTO mkroom.quest
		VALUES(#{questName}, #{branchLocation}, #{genre}, #{difficulty}, #{questTime},
		        #{minPlayerNum}, #{maxPlayerNum}, #{detailComment}, #{delFlag})
	</insert>
	
	<!-- quest DB 수정  -->
	<update id="updateQuestInfo">
		UPDATE mkroom.quest
		SET QUESTNAME = #{param2.questName}, BRANCHLOCATION = #{param2.branchLocation}, GENRE = #{param2.genre}, DIFFICULTY = #{param2.difficulty}, 
			QUESTTIME = #{param2.questTime}, MINPLAYERNUM = #{param2.minPlayerNum}, MAXPLAYERNUM = #{param2.maxPlayerNum}, DETAILCOMMENT = #{param2.detailComment}
		WHERE (QUESTNAME = #{param1.questName} AND BRANCHLOCATION = #{param1.branchLocation})
	</update>
	<!-- 특정 첨부파일 delFlag 활성화  -->
	<update id="updateQuestDelFlagActive">
		UPDATE mkroom.QUEST
		SET DELFLAG = 1
		WHERE QUESTNAME = #{questName} AND BRANCHLOCATION = #{branchLocation}
	</update>

	<!-- quest DB 삭제  -->
	<delete id="deleteQuestInfo">
		DELETE quest
		WHERE (questName = #{questName} AND BRANCHLOCATION = #{branchLocation})
	</delete>


</mapper>