<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
 <!-- DAO 대신 매퍼인터페이스를 사용하는 경우, 
      namespace 속성에 패키지이름이 포함된 인터페이스이름을 설정합니다-->
<mapper namespace="com.beatphobia.mkroom.mapper.EventBoardMapper">
	
	
	<resultMap type="com.beatphobia.mkroom.domain.noticeevent.NoticeEventDTO" id="eventMap">
		<result property="bno" column="bno"/>
		<result property="btitle" column="btitle"/>
		<result property="bcontent" column="bcontent"/>
		<result property="bwriter" column="bwriter"/>
		<result property="bregDate" column="bregDate"/>
		<result property="bmodDate" column="bmodDate"/>
		<result property="bviewCnt" column="bviewCnt"/>
		<result property="breplyCnt" column="breplyCnt"/>
		<result property="bdelFlag" column="bdelFlag"/>
		<collection property="fileInfos" resultMap="fileInfoMap" />
	</resultMap>	
		
	<resultMap type="com.beatphobia.mkroom.common.fileupload.BoardFileInfoDTO" id="fileInfoMap">
		<result property="uuid" column="uuid" />
		<result property="uploadPath" column="uploadPath" />
		<result property="fileName" column="fileName" />
		<result property="fileType" column="fileType" />
	</resultMap>
	
	<!-- 게시물 목록 조회 - 검색-페이징-파일정보 고려 -->
 	<select id="selectEventBoardList" resultMap="eventMap">
		<![CDATA[
		SELECT A.BNO, A.BTITLE, A.BWRITER, A.BREGDATE, A.BMODDATE, A.BVIEWCNT, A.BDELFLAG, A.BREPLYCNT , C.UUID, C.FILENAME, C.UPLOADPATH, C.fileType
		FROM (
				SELECT bno, btitle, bwriter, bregDate, bmodDate, bviewCnt, bdelFlag, breplyCnt 
				FROM ( SELECT /*+ index_desc(a PK_NOTICE_EVENT) */ rownum rn, bno, btitle, bwriter, bregDate, bmodDate, bviewCnt, bdelFlag, breplyCnt 
					   FROM NOTICE_EVENT a
				       WHERE  
			]]>
	
			<trim  prefix="("  suffix=") AND" prefixOverrides="OR" >
				<foreach collection="scopeArray" item="scope">
					<trim prefix="OR">
						<choose>
							<when test="scope=='T'.toString()">btitle LIKE '%' || #{keyword} || '%'</when>
							<when test="scope=='C'.toString()">bcontent LIKE '%' || #{keyword} || '%'</when>
							<when test="scope=='W'.toString()">bwriter LIKE '%' || #{keyword} || '%'</when>
						</choose>
					</trim>
				</foreach>
			</trim>		
			<![CDATA[			             
				       	  rownum <= ( #{pageNum} * #{rowAmountPerPage} ) 
				       	  ORDER BY bno DESC)
				WHERE rn >= ( #{pageNum} * #{rowAmountPerPage} ) - ( #{rowAmountPerPage}  -1 )
			)A
		    LEFT OUTER JOIN NOTICE_EVENT_ATTACH B ON (A.BNO = B.BNO) 
		    LEFT OUTER JOIN FILEINFO C ON (B.UUID = C.UUID)
			ORDER BY BNO DESC , UUID
		]]>
		
	</select>
	
	<!-- 게시물 총 개수 조회(검색 - 페이징): 삭제 요청된 행 포함 -->
	<select id="selectRowAmountTotal" resultType="long">
		SELECT count(*) totalCnt FROM NOTICE_EVENT	
		<where> 
			<trim  prefix="("  suffix=")" prefixOverrides="OR" >
				<foreach collection="scopeArray" item="scope">
					<trim prefix="OR">
						<choose>
							<when test="scope=='T'.toString()">btitle LIKE '%' || #{keyword} || '%'</when>
							<when test="scope=='C'.toString()">bcontent LIKE '%' || #{keyword} || '%'</when>
							<when test="scope=='W'.toString()">bwriter LIKE '%' || #{keyword} || '%'</when>
						</choose>
					</trim>
				</foreach>
			</trim>
		</where>	
	</select>	
	
	<!-- 특정 게시물 조회 -->	
	<select id="selectEventBoard" resultType="com.beatphobia.mkroom.domain.noticeevent.NoticeEventDTO">
		    SELECT * FROM NOTICE_EVENT WHERE bno = #{bno}
	</select>
	
	<!-- 게시물의 마지막 bno 조회 -->	
	<select id="selectLastBno" resultType="long">
		SELECT (CASE WHEN MAX(bno) is NULL THEN 0
		            ELSE MAX(bno) END) max_bno
		FROM mkroom.notice_event
	</select>
	
	<!-- 게시물 등록 -->
	<insert id="insertEventBoard" parameterType="com.beatphobia.mkroom.domain.noticeevent.NoticeEventDTO">
		INSERT INTO NOTICE_EVENT
		VALUES (#{bno}, #{btitle}, #{bcontent}, #{bwriter}, DEFAULT, DEFAULT, DEFAULT, DEFAULT, DEFAULT)
	</insert>
	
	<!-- 특정 게시물 수정 -->
	<update id="updateEventBoard">
		UPDATE NOTICE_EVENT
		SET btitle = #{btitle}, bcontent = #{bcontent}, bmodDate = DEFAULT
		WHERE bno = #{bno}
	</update>
	
	<!-- 게시물 삭제 요청 - 해당 글의 bdelFlag을 1로 수정 -->
	<update id="updateBdelFlag">
		UPDATE NOTICE_EVENT SET bdelflag = 1 WHERE bno = #{bno}	
	</update>	
	
	<!-- 게시물 조회 수 증가 -->	
	<update id="updateBviewsCnt">
		UPDATE NOTICE_EVENT SET bviewcnt = (bviewcnt + 1) WHERE bno = #{bno} 
	</update>
	
	<!-- 게시물의 댓글 개수 수정: 댓글추가 시에 #{amount}에 1, 댓글삭제 시 #{amount}에 -1 이 각각 전달됨 -->
	<update id="updateBReplyCnt">
		UPDATE NOTICE_EVENT
		SET BREPLYCNT = BREPLYCNT + #{amount}
		WHERE bno = #{bno} AND bdelFlag = 0
	</update>
	
	<!-- 삭제할 게시물 조회 -->
	<select id="selectBdelFlagOn" resultType="com.beatphobia.mkroom.domain.noticeevent.NoticeEventDTO">
		SELECT * 
		FROM 
		(SELECT rownum rn, e.btitle, e.bwriter, e.bno, e.bregDate, e.bmodDate
		FROM mkroom.NOTICE_EVENT e
		WHERE bdelFlag = 1 AND rownum <![CDATA[ <= #{pageNum} * #{rowAmountPerPage} 
		)
		WHERE rn >= ( (#{pageNum}-1) * #{rowAmountPerPage} ) + 1
		]]>
	</select>
	
	<!-- 삭제할 게시물 총 갯수 조회 -->
	<select id="selectBdelFlagOnRowAmountTotal" resultType="long">
		SELECT count(*) totalCnt 
		FROM NOTICE_EVENT	
		WHERE bdelFlag = 1
	</select>
	
	
	
	
	

</mapper>